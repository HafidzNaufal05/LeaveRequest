#pragma checksum "D:\LeaveRequestProject\LeaveRequest\LeaveRequest\LeaveRequestClient\Views\ApproveHRD\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0c796917d4a6915900eb551da95af2e95d8041a4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ApproveHRD_Index), @"mvc.1.0.view", @"/Views/ApproveHRD/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\LeaveRequestProject\LeaveRequest\LeaveRequest\LeaveRequestClient\Views\_ViewImports.cshtml"
using LeaveRequestClient;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\LeaveRequestProject\LeaveRequest\LeaveRequest\LeaveRequestClient\Views\_ViewImports.cshtml"
using LeaveRequestClient.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0c796917d4a6915900eb551da95af2e95d8041a4", @"/Views/ApproveHRD/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"18486de7349ee3163d6e680a7ab6956201a35989", @"/Views/_ViewImports.cshtml")]
    public class Views_ApproveHRD_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formrole"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<div class=""p-3"">
    <h4 class=""text-muted font-18 m-b-5 text-center"">Welcome</h4>
    <p class=""text-muted text-center"">Approval HRD Data Leave Request.</p>

    <div class=""container-fluid mt-5"">
        <table id=""myTable"" class=""table table-striped table-bordered dataTable"" style=""width:100%"">
            <thead class=""thead-light"">
                <tr role=""row"">
                    <th>No</th>
                    <th>NIK</th>
                    <th>Full Name</th>
                    <th>Id</th>
                    <th>Leave Category</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>Reason Request</th>
                    <th>Notes</th>
                    <th>Email</th>
                    <th>Status Request</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tfoot>
            </tfoot>
            <tbody></tbody>
        </table>
    </div>
</div>

<div class=""modal fade"" id=""Request"" tabindex=""-1"" ");
            WriteLiteral(@"role=""dialog"" aria-labelledby=""addModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""addModalLabel"">Approve Request</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0c796917d4a6915900eb551da95af2e95d8041a45270", async() => {
                WriteLiteral(@"
                    <div class=""row"">
                        <div class=""col-6"">
                            <div class=""form-group"">
                                <label for=""id"" class=""col-form-label"">Id:</label>
                                <input disabled type=""text"" class=""form-control"" id=""id"" name=""id"">
                            </div>
                            <div class=""form-group"">
                                <label for=""name"" class=""col-form-label"">Start Date:</label>
                                <input disabled type=""text"" class=""form-control"" id=""startdate"" name=""startdate"">
                            </div>
                            <div class=""form-group"">
                                <label for=""name"" class=""col-form-label"">Reason Request:</label>
                                <input disabled id=""reasonrequest"" class=""form-control"" name=""reasonrequest"">
                            </div>
                            <div class=""form-group"">
                           ");
                WriteLiteral(@"     <label for=""name"" class=""col-form-label"">Notes Employee:</label>
                                <textarea disabled type=""text"" class=""form-control"" id=""notes"" name=""notes""></textarea>
                            </div>
                        </div>
                        <div class=""col-6"">
                            <div class=""form-group"">
                                <label for=""id"" class=""col-form-label"">NIK:</label>
                                <input disabled type=""text"" class=""form-control"" id=""nik"" name=""nik"">
                            </div>
                            <div class=""form-group"">
                                <label for=""name"" class=""col-form-label"">End Date:</label>
                                <input disabled type=""text"" class=""form-control"" id=""enddate"" name=""enddate"">
                            </div>
                            <div class=""form-group"">
                                <label for=""name"" class=""col-form-label"">Email:</label>
                    ");
                WriteLiteral(@"            <input disabled type=""text"" class=""form-control"" id=""email"" name=""email"">
                            </div>
                            <div class=""form-group"">
                                <label for=""name"" class=""col-form-label"">Notes:</label>
                                <textarea type=""text"" class=""form-control"" id=""notes1"" name=""notes1""></textarea>
                            </div>
                        </div>
                    </div>
                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" onclick=""approve()"">Approve</button>
                <button type=""button"" class=""btn btn-primary"" onclick=""reject()"">Reject</button>
            </div>
        </div>
    </div>
</div>
");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>var table = null;
        $(document).ready(function () {
            table = $(""#myTable"").DataTable({
                ""filter"": true,
                ""orderMulti"": false,
                ""ajax"": {
                    ""url"": ""https://localhost:44338/api/Request/GetApproveData"",
                    ""type"": ""get"",
                    ""datatype"": ""json"",
                    ""dataSrc"": """"
                    /*""dataSrc"": ""data""*/
                },
                ""columnDefs"": [
                    {
                        ""targets"": [],
                        ""visible"": false,

                    },
                    {
                        ""targets"": [0, 2],
                        ""searchable"": true
                    },
                    {
                        ""targets"": [3],
                        ""searchable"": false,
                        ""orderable"": false
                    },
                ],
                ""columns"": [
                    {
                        ""dat");
                WriteLiteral(@"a"": null,
                        ""render"": function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    {
                        ""data"": 'NIK'
                    },
                    {
                        ""data"": 'FullName'
                    },
                    {
                        ""data"": 'Id'
                    },
                    {
                        ""data"": 'LeaveCategory'
                    },
                    {
                        ""data"": 'StartDate',
                        render: function (data, type, row) {
                            let date = moment(row.StartDate).format('DD MMMM YYYY')
                            return date
                        }
                    },
                    {
                        ""data"": 'EndDate',
                        render: function (data, type, row) {
                            let date = mome");
                WriteLiteral(@"nt(row.EndDate).format('DD MMMM YYYY')
                            return date
                        }
                    },
                    {
                        ""data"": 'ReasonRequest'
                    },
                    {
                        ""data"": 'Notes'
                    },
                    {
                        ""data"": 'Email'
                    },
                    {
                        ""data"": 'StatusRequest',
                        ""render"": function (StatusRequest) {
                            if (StatusRequest == ""Approved by Manager"") {
                                return ""Approved By Manager"";
                            }
                            else if (StatusRequest == ""Approved by HRD"") {
                                return ""Approved"";
                            }
                            else if (StatusRequest == ""Reject by Manager"") {
                                return ""Reject By Manager"";
                            }
            ");
                WriteLiteral(@"                else if (StatusRequest == ""Reject by HRD"") {
                                return ""Reject By HRD"";
                            }
                            else {
                                return ""Waiting"";
                            }
                        }
                    },
                    {
                        ""data"": null,
                        ""render"": function (data, type, row, meta) {
                            return '<button id=""buttonUpdate"" type=""button"" class=""btn btn-primary"">Approval</button>'
                        }
                    }
                ]
            });
        });

        function approve() {
            var id = $('#Id').val();
            console.log(""put accessed"");
            Approve(id);
        }

        function reject() {
            var id = $('#Id').val();
            console.log(""put accessed"");
            Reject(id);
        }

        $(""#myTable"").on('click', '#buttonUpdate', function () {
            var data ");
                WriteLiteral(@"= $(""#myTable"").DataTable().row($(this).parents('tr')).data();
            console.log(data);
            $(""#Request"").modal(""show"");
            $(""#fullname"").val(data.FullName);
            $(""#nik"").val(data.NIK);
            $(""#leavecategory"").val(data.LeaveCategory);
            $(""#startdate"").val(data.StartDate);
            $(""#enddate"").val(data.EndDate);
            $(""#reasonrequest"").val(data.ReasonRequest);
            $(""#email"").val(data.Email);
            $(""#notes"").val(data.Notes);
            $(""#statusRequest"").val(data.StatusRequest);
            $(""#id"").val(data.Id);
        });


        //function Get(Id) {
        //    console.log(Id);
        //    $.ajax({
        //        url: ""/Approve/Get"",
        //        data: { Id: Id }
        //    }).done((result) => {
        //        console.log(result);
        //        var obj = JSON.parse(result);
        //        $(""#Request"").modal(""show"");
        //        $(""#fullname"").val(obj.data.fullName);
        //        $(""#nik");
                WriteLiteral(@""").val(obj.data.nik);
        //        $(""#leavecategory"").val(obj.data.leaveCategory);
        //        $(""#startdate"").val(obj.data.startDate);
        //        $(""#enddate"").val(obj.data.endDate);
        //        $(""#reasonrequest"").val(obj.data.reasonRequest);
        //        $(""#notes"").val(obj.data.notes);
        //        $(""#notes1"").val();
        //        $(""#statusRequest"").val(obj.data.statusRequest);
        //        $(""#id"").val(obj.data.id);
        //    }).fail((error) => {
        //        console.log(error);
        //    })
        //}

        function Approve(Id) {
            var approve = new Object();
            approve.id = $('#id').val();
            approve.Email = $('#email').val();
            approve.notes = $('#notes1').val();
            $.ajax({
                type: ""POST"",
                url: '/ApproveHRD/Approve',
                data: approve
            }).done((result) => {
                console.log(""ok"");
                if (result == 200) {
            ");
                WriteLiteral(@"        swal('Success', 'Update Successfully', 'success');
                    $('#Request').modal('hide');
                    $(""#id"").val(null);
                    $(""#nik"").val(null);
                    $(""#leavecategory"").val(null);
                    $(""#startdate"").val(null);
                    $(""#enddate"").val(null);
                    $(""#reasonrequest"").val(null);
                    $(""#notes"").val(null);
                    /*$(""#statusrequest"").val(null);*/
                    //$(""#ApprovedHRD"").val(null);
                    //$(""#ApprovedManager"").val(null);
                    table.ajax.reload();
                }
                else {
                    swal('Error', 'Something Went Wrong', 'error');
                }
            }).fail((error) => {
                console.log(error)
            });
        }

        function Reject(Id) {
            var reject = new Object();
            reject.id = $('#id').val();
            reject.Email = $('#email').val();
            reject.");
                WriteLiteral(@"notes = $('#notes1').val();
            $.ajax({
                type: ""PUT"",
                url: '/ApproveHRD/Reject',
                data: reject
            }).done((result) => {

                if (result == 200) {
                    swal('Success', 'Update Successfully', 'success');
                    $('#Request').modal('hide');
                    $(""#id"").val(null);
                    $(""#nik"").val(null);
                    $(""#leavecategory"").val(null);
                    $(""#startdate"").val(null);
                    $(""#enddate"").val(null);
                    $(""#reasonrequest"").val(null);
                    $(""#notes"").val(null);
                    table.ajax.reload();
                }
                else {
                    swal('Error', 'Something Went Wrong', 'error');
                }
            }).fail((error) => {
                console.log(error)
            });
        }</script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
