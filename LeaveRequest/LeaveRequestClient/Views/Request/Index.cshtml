
<div class="p-3">
    <h4 class="text-muted font-18 m-b-5 text-center">Welcome</h4>
    <p class="text-muted text-center">Leave Request Form Empploye.</p>
    <a href="javascript:void(0)" class="btn bg-transparant text-success" data-toggle="modal" data-target="#Request">Add Request</a>
    <div class="container-fluid mt-5">
        <table id="myTable" class="table table-striped table-bordered dataTable" style="width:100%">
            <thead class="thead-light">
                <tr role="row">
                    <th>No</th>
                    <th>NIK</th>
                    <th>Id</th>
                    <th>Leave Category</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>Reason Request</th>
                    <th>NIK</th>
                    <th>Notes</th>
                    <th>Status</th>
                </tr>
            </thead>
            <!--<tfoot>
                <tr>
                    <th>No</th>
                    <th>Id</th>
                    <th>Leave Category</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>Reason Request</th>
                    <th>Employee NIK</th>
                    <th>Status</th>
                    <th>Notes</th>-->
                    @*<th>Approved HRD</th>
                     <th>Approved Manager</th>*@
                <!--</tr>
            </tfoot>-->
            <tbody></tbody>
        </table>
    </div>

    <div class="modal fade" id="Request" tabindex="-1" role="dialog" aria-labelledby="addModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addModalLabel">Add Request</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="formrole">
                        <div class="row">
                            <div class="col-6">
                                <div class="form-group">
                                    <label for="id" class="col-form-label">NIK:</label>
                                    <input type="text" class="form-control" id="nik" name="nik">
                                </div>
                                <div class="form-group">
                                    <label for="name" class="col-form-label">Start Date:</label>
                                    <input type="date" class="form-control" id="startdate" name="startdate">
                                </div>
                                <div class="form-group">
                                    <label for="name" class="col-form-label">Reason Request:</label>
                                    <select id="reasonrequest" class="form-control" name="reasonrequest">
                                        <option value="Normal leave">Normal leave</option>
                                        <option value="Maternity leave">Maternity leave</option>
                                        <option value="Married">Married</option>
                                        <option value="Marry or Circumcise or Baptize Children">Marry or Circumcise or Baptize Children</option>
                                        <option value="Wife gave birth or had a miscarriage">Wife gave birth or had a miscarriage</option>
                                        <option value="Husband or Wife Parents or In laws Children or Son In law have passed away">Husband or Wife Parents or In laws Children or Son In law have passed away</option>
                                        <option value="Family member in one house died">Family member in one house died</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="form-group">
                                    <label for="name" class="col-form-label">Leave Category:</label>
                                    <select id="leavecategory" class="form-control" name="leavecategory">
                                        <option value="Normal Request">Normal Request</option>
                                        <option value="Special Request">Special Request</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label for="name" class="col-form-label">End Date:</label>
                                    <input type="date" class="form-control" id="enddate" name="enddate">
                                </div>
                                <div class="form-group">
                                    <label for="name" class="col-form-label">Notes:</label>
                                    <textarea type="text" class="form-control" id="notes" name="notes"></textarea>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" onclick="SubmitRequest()">Submit</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>/*var table = null;*/
            $(document).ready(function () {
                /*table =*/ $("#myTable").DataTable({
                    "filter": true,
                    "orderMulti": false,
                    "ajax": {
                        "url": "/Request/GetHistoryRequest",
                        "type": "get",
                        "datatype": "json",
                        "dataSrc": ""
                    },
                    "columnDefs": [
                        {
                            "targets": [],
                            "visible": false,

                        },
                        {
                            "targets": [0, 2],
                            "searchable": true
                        },
                        {
                            "targets": [3],
                            "searchable": false,
                            "orderable": false
                        },
                    ],
                    "columns": [
                        {
                            "data": null,
                            "render": function (data, type, row, meta) {
                                return meta.row + meta.settings._iDisplayStart + 1;
                            }
                        },
                        {
                            "data": 'NIK'
                        },
                        {
                            "data": 'Id'
                        },
                        {
                            "data": 'LeaveCategory'
                        },
                        {
                            "data": 'StartDate',
                            render: function (data, type, row) {
                                let date = moment(row.StartDate).format('DD MMMM YYYY')
                                return date
                            }
                        },
                        {
                            "data": 'EndDate',
                            render: function (data, type, row) {
                                let date = moment(row.EndDate).format('DD MMMM YYYY')
                                return date
                            }
                        },
                        {
                            "data": 'ReasonRequest'
                        },
                        {
                            "data": 'EmployeeNIK'
                        },
                        {
                            "data": 'Notes'
                        },
                        {
                            "data": 'StatusRequest',
                            //"render": function (StatusRequest) {
                            //    if (StatusRequest == "Waithing") {
                            //        return "Waiting Approve";
                            //    }
                            //    else if (StatusRequest == "Approved by Manager") {
                            //        return "Approved By Manager";
                            //    }
                            //    else if (StatusRequest == "Approved by HRD") {
                            //        return "Approved";
                            //    }
                            //    else if (StatusRequest == "Reject by Manager") {
                            //        return "Reject By Manager";
                            //    }
                            //    else if (StatusRequest == "Reject by HRD") {
                            //        return "Reject By HRD";
                            //    }
                            //    else {
                            //        return null;
                            //    }
                            //}
                        }
                    ]
                });
            });

            function Get(id) {
                console.log(id);
                $.ajax({
                    url: "/Request/Get",
                    data: { id: id }
                }).done((result) => {
                    console.log(result);
                    var obj = JSON.parse(result);
                    $("#Request").modal("show");
                    $("#id").val(obj.data.Id);
                    $("#leaveCategory").val(obj.data.LeaveCategory);
                    $("#startdate").val(obj.data.StartDate);
                    $("#enddate").val(obj.data.EndDate);
                    $("#reasonrequest").val(obj.data.ReasonRequest);
                    $("#employee").val(obj.data.Employee);
                    $("#notes").val(obj.data.Notes);
                    $("#statusRequest").val(obj.data.StatusRequest);
                    //$("#ApprovedHRD").val(obj.data.approvedHRD);
                    //$("#ApprovedManager").val(obj.data.approvedManager);
                }).fail((error) => {
                    console.log(error);
                })
        }
        debugger;
            function SubmitRequest() {
                console.log("ok");
                var Request = new Object();
                Request.employeeNIK = $('#nik').val();
                Request.leaveCategory = $('#leavecategory').val();
                Request.startdate = $('#startdate').val();
                Request.enddate = $('#enddate').val();
                Request.reasonrequest = $('#reasonrequest').val();
                Request.notes = $('#notes').val();
                $.ajax({
                    url: '/Request/SubmitRequest',
                    type: "POST",
                    data: Request
                }).done((result) => {
                    if (result == 200) {
                        swal({
                            title: "Success!",
                            text: "Request Has Been Added, Cek Your Email",
                            icon: "success"
                        }
                        ).then(() => { location.reload() })
                        $('#Request').modal('hide');
                        $("#employeeNIK").val(null);
                        $("#leaveCategory").val(null);
                        $("#startDate").val(null);
                        $("#endDate").val(null);
                        $("#reasonRequest").val(null);
                        $("#notes").val(null);
                        //$("#statusRequest").val(null);
                        //$("#ApprovedHRD").val(null);
                        //$("#ApprovedManager").val(null);
                    }
                    else {
                        swal('Error', 'Something Went Wrong', 'error');
                    }
                }).fail((error) => {
                    console.log(error)
                });
            }
    </script>
}
